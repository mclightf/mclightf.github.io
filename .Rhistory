## ----echo=FALSE,message=FALSE, warning = FALSE---------------------------
library(tidyverse)
library(haven)
library(shiny)
options(dplyr.print_min = 5)
## ---- echo = FALSE, cache = FALSE----------------------------------------
library(shiny)
ui <- fluidPage(
pageWithSidebar(
headerPanel('Iris k-means clustering'),
sidebarPanel(
selectInput('xcol', 'X Variable', names(iris)),
selectInput('ycol', 'Y Variable', names(iris),
selected=names(iris)[[2]]),
numericInput('clusters', 'Cluster count', 3,
min = 1, max = 9)
),
mainPanel(
plotOutput('plot1')
)
)
)
server <- function(input, output, session) {
# Combine the selected variables into a new data frame
selectedData <- reactive({
iris[, c(input$xcol, input$ycol)]
})
clusters <- reactive({
kmeans(selectedData(), input$clusters)
})
output$plot1 <- renderPlot({
palette(c("#E41A1C", "#377EB8", "#4DAF4A", "#984EA3",
"#FF7F00", "#FFFF33", "#A65628", "#F781BF", "#999999"))
par(mar = c(5.1, 4.1, 0, 1))
plot(selectedData(),
col = clusters()$cluster,
pch = 20, cex = 3)
points(clusters()$centers, pch = 4, cex = 4, lwd = 4)
})
}
shinyApp(ui, server)
shinyApp(ui, server)
knitr::opts_chunk$set(fig.path = "../images/")
plot(mtcars)
plot(mtcars)
knitr::opts_chunk$set(fig.path = "../images/")
mtcars <- mtcars %>% select(mpg,wt)
mtcars
set.seed(123)
mtcars <- mtcars %>% select(mpg,wt)
clusters <- kmeans(selectedData(), input$clusters, iter.max = input$iteration, algorithm = "MacQueen")
set.seed(123)
mtcars <- mtcars %>% select(mpg,wt)
clusters <- kmeans(mtcars, input$clusters, iter.max = input$iteration, algorithm = "MacQueen")
set.seed(123)
mtcars <- mtcars %>% select(mpg,wt)
clusters <- kmeans(mtcars, 2, iter.max = input$iteration, algorithm = "MacQueen")
library(ggplot2)
set.seed(123)
mtcars <- mtcars %>% select(mpg,wt)
clusters <- kmeans(mtcars, 2, iter.max = 10, algorithm = "MacQueen")
library(ggplot2)
set.seed(123)
mtcars <- mtcars %>% select(mpg,wt)
clusters <- kmeans(mtcars, 2, iter.max = 10, algorithm = "MacQueen")
plot <- ggplot(mtcars, aes(col = clusters))
plot
library(ggplot2)
set.seed(123)
mtcars <- mtcars %>% select(mpg,wt)
clusters <- kmeans(mtcars, 2, iter.max = 10, algorithm = "MacQueen")
plot <- plot(mtcars, col = clusters)
plot
library(ggplot2)
set.seed(123)
mtcars <- mtcars %>% select(mpg,wt)
clusters <- kmeans(mtcars, 2, iter.max = 10, algorithm = "MacQueen")
plot <- plot(mtcars, col = clusters$cluster)
plot
library(ggplot2)
set.seed(123)
mtcars <- mtcars %>% select(mpg,wt) %>% drop_na()
clusters <- kmeans(mtcars, 2, iter.max = 10, algorithm = "MacQueen")
plot <- plot(mtcars, col = clusters$cluster)
plot
library(ggplot2)
set.seed(123)
mtcars <- mtcars %>% select(mpg,wt) %>% drop_na()
clusters <- kmeans(mtcars, 2, iter.max = 10, algorithm = "MacQueen")
plot <- plot(mtcars, col = clusters$cluster)
library(ggplot2)
set.seed(123)
mtcars <- mtcars %>% select(mpg,wt) %>% drop_na()
clusters <- kmeans(mtcars, 3, iter.max = 10, algorithm = "MacQueen")
plot(mtcars, col = clusters$cluster)
library(ggplot2)
set.seed(123)
mtcars <- mtcars %>% select(mpg,wt) %>% drop_na()
clusters <- kmeans(mtcars, 3, iter.max = 10)
plot(mtcars, col = clusters$cluster)
library(ggplot2)
set.seed(123)
mtcars <- mtcars %>% select(mpg,wt) %>% drop_na()
clusters <- kmeans(mtcars, 3, iter.max = 10)
ggplot(mtcars, col = clusters$cluster)
library(ggplot2)
set.seed(123)
mtcars <- mtcars %>% select(mpg,wt) %>% drop_na()
clusters <- kmeans(mtcars, 3, iter.max = 10)
ggplot(mtcars, aes(col = clusters$cluster))
library(ggplot2)
set.seed(123)
mtcars <- mtcars %>% select(mpg,wt) %>% drop_na()
clusters <- kmeans(mtcars, 3, iter.max = 10)
print(clusters)
plot(mtcars, col = clusters$cluster)
k <- c(1:10)
tot.withinss <- c(1:10)
for (i in 1:10) {
tot.withinss[i] <- kmeans(mtcars, i, iter.max = 10)
}
plot(k, tot.withinss)
k <- c(1:10)
tot.withinss <- c(1:10)
for (i in 1:10) {
tot.withinss[i] <- kmeans(mtcars, i, iter.max = 10)
}
print(k)
print(tot.withinss )
#plot(k, tot.withinss)
k <- c(1:10)
tot.withinss <- c(1:10)
for (i in 1:10) {
clusters <- kmeans(mtcars, i, iter.max = 10)
tot.withinss[i] <- clusters$tot.withinss
}
print(k)
print(tot.withinss)
#plot(k, tot.withinss)
k <- c(1:10)
tot.withinss <- c(1:10)
for (i in 1:10) {
clusters <- kmeans(mtcars, i, iter.max = 10)
tot.withinss[i] <- clusters$tot.withinss
}
plot(k, tot.withinss)
k <- c(1:10)
tot.withinss <- c(1:10)
for (i in 1:10) {
clusters <- kmeans(mtcars, i, iter.max = 10)
tot.withinss[i] <- clusters$tot.withinss
}
ggplot(k, tot.withinss)
k <- c(1:10)
tot.withinss <- c(1:10)
for (i in 1:10) {
clusters <- kmeans(mtcars, i, iter.max = 10)
tot.withinss[i] <- clusters$tot.withinss
}
ggplot(cbind(k,tot.withinss))
k <- c(1:10)
tot.withinss <- c(1:10)
for (i in 1:10) {
clusters <- kmeans(mtcars, i, iter.max = 10)
tot.withinss[i] <- clusters$tot.withinss
}
ggplot(data.frame(cbind(k,tot.withinss)))
k <- c(1:10)
tot.withinss <- c(1:10)
for (i in 1:10) {
clusters <- kmeans(mtcars, i, iter.max = 10)
tot.withinss[i] <- clusters$tot.withinss
}
plot(k,tot.withinss)
k <- c(1:10)
tot.withinss <- c(1:10)
for (i in 1:10) {
clusters <- kmeans(mtcars, i, iter.max = 10)
tot.withinss[i] <- clusters$tot.withinss
}
plot(k,tot.withinss,
xlab = "K (# of clusters)",
ylab = "Total Variation of Clusters")
k <- c(1:10)
tot.withinss <- c(1:10)
for (i in 1:10) {
clusters <- kmeans(mtcars, i, iter.max = 10)
tot.withinss[i] <- clusters$tot.withinss
}
plot(k,tot.withinss,
xlab = "K (# of clusters)",
ylab = "Total Variation of Clusters")
k <- c(1:10)
tot.withinss <- c(1:10)
for (i in 1:10) {
clusters <- kmeans(mtcars, i, iter.max = 10)
tot.withinss[i] <- clusters$tot.withinss
}
error <- data.frame(k, tot.withinss)
ggplot(error)
k <- c(1:10)
tot.withinss <- c(1:10)
for (i in 1:10) {
clusters <- kmeans(mtcars, i, iter.max = 10)
tot.withinss[i] <- clusters$tot.withinss
}
error <- data.frame(k, tot.withinss)
ggplot(error) + geom_point()
k <- c(1:10)
tot.withinss <- c(1:10)
for (i in 1:10) {
clusters <- kmeans(mtcars, i, iter.max = 10)
tot.withinss[i] <- clusters$tot.withinss
}
error <- data.frame(k, tot.withinss)
ggplot() + geom_point(aes(x=k, y=tot.withinss))
k <- c(1:10)
tot.withinss <- c(1:10)
for (i in 1:10) {
clusters <- kmeans(mtcars, i, iter.max = 10)
tot.withinss[i] <- clusters$tot.withinss
}
error <- data.frame(k, tot.withinss)
ggplot() + geom_point(aes(x=k, y=tot.withinss)) + xlab("K (# of clusters)") +
ylab("Total Variation of Clusters")
library(ggplot2)
set.seed(123)
mtcars <- mtcars %>% select(mpg,wt) %>% drop_na()
clusters <- kmeans(mtcars, 3, iter.max = 10)
print(clusters)
ggplot(mtcars, col = clusters$cluster) + geom_point()
library(ggplot2)
set.seed(123)
mtcars <- mtcars %>% select(mpg,wt) %>% drop_na()
clusters <- kmeans(mtcars, 3, iter.max = 10)
print(clusters)
ggplot(mtcars, col = clusters$cluster) + geom_point(aes(x=mpg, y=wt))
library(ggplot2)
set.seed(123)
mtcars <- mtcars %>% select(mpg,wt) %>% drop_na()
clusters <- kmeans(mtcars, 3, iter.max = 10)
print(clusters)
mtcars$cluster <- clusters$cluster
ggplot(mtcars,aes(col =cluster)) + geom_point(aes(x=mpg, y=wt))
library(ggplot2)
set.seed(123)
mtcars <- mtcars %>% select(mpg,wt) %>% drop_na()
clusters <- kmeans(mtcars, 2, iter.max = 10)
print(clusters)
mtcars$cluster <- clusters$cluster
ggplot(mtcars,aes(col =cluster)) + geom_point(aes(x=mpg, y=wt))
library(ggplot2)
set.seed(123)
mtcars <- mtcars %>% select(mpg,wt)
clusters <- kmeans(mtcars, 2, iter.max = 10)
mtcars$cluster <- clusters$cluster
ggplot(mtcars,aes(col = cluster)) + geom_point(aes(x=mpg, y=wt)) +
xlab("Miles Per Gallon") + ylab("Weight (1000 lbs)")
knitr::opts_chunk$set(fig.path = "../images/")
#Create initial vectors
k <- c(1:10)
tot.withinss <- c(1:10)
#Get error values for the different cluster numbers
for (i in 1:10) {
clusters <- kmeans(mtcars, i, iter.max = 10)
tot.withinss[i] <- clusters$tot.withinss
}
#Create plot!
ggplot() + geom_point(aes(x=k, y=tot.withinss)) + xlab("K (# of clusters)") +
ylab("Total Variation of Clusters")
library(ggplot2)
#Set seed for reproducibility
set.seed(123)
#Select variables
mtcars <- mtcars %>% select(mpg,wt)
#Get cluster classifications for two clusters
clusters <- kmeans(mtcars, 2, iter.max = 10)
#Add classifications to data set for plot aesthetic
mtcars$cluster <- clusters$cluster
#Plot results!
ggplot(mtcars,aes(col = cluster)) + geom_point(aes(x=mpg, y=wt)) +
xlab("Miles Per Gallon") + ylab("Weight (1000 lbs)")
library(ggplot2)
#Set seed for reproducibility
set.seed(123)
#Select variables
mtcars <- mtcars %>% select(mpg,wt)
#Get cluster classifications for two clusters
clusters <- kmeans(mtcars, 2, iter.max = 10)
#Add classifications to data set for plot aesthetic
mtcars$cluster <- clusters$cluster
#Plot results!
ggplot(mtcars,aes(col = as.factor(cluster))) + geom_point(aes(x=mpg, y=wt)) +
xlab("Miles Per Gallon") + ylab("Weight (1000 lbs)")
library(ggplot2)
#Set seed for reproducibility
set.seed(123)
#Select variables
mtcars <- mtcars %>% select(mpg,wt)
#Get cluster classifications for two clusters
clusters <- kmeans(mtcars, 2, iter.max = 10)
#Add classifications to data set for plot aesthetic
mtcars$cluster <- clusters$cluster
#Plot results!
ggplot(mtcars,aes(col = as.factor(cluster))) + geom_point(aes(x=mpg, y=wt)) +
xlab("Miles Per Gallon") + ylab("Weight (1000 lbs)") +
lab(col = "Cluster")
library(ggplot2)
#Set seed for reproducibility
set.seed(123)
#Select variables
mtcars <- mtcars %>% select(mpg,wt)
#Get cluster classifications for two clusters
clusters <- kmeans(mtcars, 2, iter.max = 10)
#Add classifications to data set for plot aesthetic
mtcars$cluster <- clusters$cluster
#Plot results!
ggplot(mtcars,aes(col = as.factor(cluster))) + geom_point(aes(x=mpg, y=wt)) +
xlab("Miles Per Gallon") + ylab("Weight (1000 lbs)") +
geom_label(col = "Cluster")
library(ggplot2)
#Set seed for reproducibility
set.seed(123)
#Select variables
mtcars <- mtcars %>% select(mpg,wt)
#Get cluster classifications for two clusters
clusters <- kmeans(mtcars, 2, iter.max = 10)
#Add classifications to data set for plot aesthetic
mtcars$cluster <- clusters$cluster
#Plot results!
ggplot(mtcars,aes(col = as.factor(cluster))) + geom_point(aes(x=mpg, y=wt)) +
xlab("Miles Per Gallon") + ylab("Weight (1000 lbs)") +
label(col = "Cluster")
library(ggplot2)
#Set seed for reproducibility
set.seed(123)
#Select variables
mtcars <- mtcars %>% select(mpg,wt)
#Get cluster classifications for two clusters
clusters <- kmeans(mtcars, 2, iter.max = 10)
#Add classifications to data set for plot aesthetic
mtcars$cluster <- clusters$cluster
#Plot results!
ggplot(mtcars,aes(col = as.factor(cluster))) + geom_point(aes(x=mpg, y=wt)) +
xlab("Miles Per Gallon") + ylab("Weight (1000 lbs)") +
labs(col = "Cluster")
rmarkdown::render(
'2022-07-21-The-Most-Interesting-Machine-Learning-Method.Rmd',
output_format = "github_document",
output_dir = "_posts",
output_options = list(
html_preview = FALSE
)
)
rmarkdown::render(
'_Rmd/2022-07-21-The-Most-Interesting-Machine-Learning-Method.Rmd',
output_format = "github_document",
output_dir = "_posts",
output_options = list(
html_preview = FALSE
)
)
rmarkdown::render(
'_Rmd/2022-07-21-The-Most-Interesting-Machine-Learning-Method.Rmd',
output_format = "github_document",
output_dir = "_posts",
output_options = list(
html_preview = FALSE
)
)
rmarkdown::render(
'_Rmd/2022-07-21-The-Most-Interesting-Machine-Learning-Method.Rmd',
output_format = "github_document",
output_dir = "_posts",
output_options = list(
html_preview = FALSE
)
)
